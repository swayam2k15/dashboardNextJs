{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Swayam/Desktop/Swayam/dashboardNextJs/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n}\n\nexport function Button({ children, className, ...rest }: ButtonProps) {\n  return (\n    <button\n      {...rest}\n      className={clsx(\n        'flex h-10 items-center rounded-lg bg-blue-500 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-blue-600 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\n        className,\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,2UAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,yLAAA,CAAA,UAAI,AAAD,EACZ,kTACA;kBAGD;;;;;;AAGP;KAZgB","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/Swayam/Desktop/Swayam/dashboardNextJs/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport postgres from 'postgres';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\n\nconst FormSchema = z.object({\n    id: z.string(),\n    customerId: z.string(),\n    amount: z.coerce.number(),\n    status: z.enum(['pending', 'paid']),\n    date: z.string(),\n});\n\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport async function createInvoice(formData: FormData) {\n    const { customerId, amount, status } = CreateInvoice.parse({\n        customerId: formData.get('customerId'),\n        amount: formData.get('amount'),\n        status: formData.get('status'),\n    });\n    const amountInCents = amount * 100;\n    const date = new Date().toISOString().split('T')[0];\n\n    await sql`\n      INSERT INTO invoices (customer_id, amount, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n    revalidatePath('/dashboard/invoices');\n    redirect('/dashboard/invoices');\n\n\n}"],"names":[],"mappings":";;;;;;IAoBsB,gBAAA,WAAA,GAAA,CAAA,GAAA,uWAAA,CAAA,wBAAA,EAAA,8CAAA,uWAAA,CAAA,aAAA,EAAA,KAAA,GAAA,uWAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/Swayam/Desktop/Swayam/dashboardNextJs/app/ui/invoices/edit-form.tsx"],"sourcesContent":["'use client';\n\nimport { CustomerField, InvoiceForm } from '@/app/lib/definitions';\nimport {\n  CheckIcon,\n  ClockIcon,\n  CurrencyDollarIcon,\n  UserCircleIcon,\n} from '@heroicons/react/24/outline';\nimport Link from 'next/link';\nimport { Button } from '@/app/ui/button';\nimport { updateInvoice } from '@/app/lib/actions';\n\n\nexport default function EditInvoiceForm({\n  invoice,\n  customers,\n}: {\n  invoice: InvoiceForm;\n  customers: CustomerField[];\n}) \nconst updateInvoiceWithId = updateInvoice.bind(null, invoice.id);\n \nreturn <form action={updateInvoiceWithId}>{/* ... */}</form>;\n{\n  return (\n    <form>\n      <div className=\"rounded-md bg-gray-50 p-4 md:p-6\">\n        {/* Customer Name */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"customer\" className=\"mb-2 block text-sm font-medium\">\n            Choose customer\n          </label>\n          <div className=\"relative\">\n            <select\n              id=\"customer\"\n              name=\"customerId\"\n              className=\"peer block w-full cursor-pointer rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\n              defaultValue={invoice.customer_id}\n            >\n              <option value=\"\" disabled>\n                Select a customer\n              </option>\n              {customers.map((customer) => (\n                <option key={customer.id} value={customer.id}>\n                  {customer.name}\n                </option>\n              ))}\n            </select>\n            <UserCircleIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n        </div>\n\n        {/* Invoice Amount */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"amount\" className=\"mb-2 block text-sm font-medium\">\n            Choose an amount\n          </label>\n          <div className=\"relative mt-2 rounded-md\">\n            <div className=\"relative\">\n              <input\n                id=\"amount\"\n                name=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                defaultValue={invoice.amount}\n                placeholder=\"Enter USD amount\"\n                className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\n              />\n              <CurrencyDollarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Invoice Status */}\n        <fieldset>\n          <legend className=\"mb-2 block text-sm font-medium\">\n            Set the invoice status\n          </legend>\n          <div className=\"rounded-md border border-gray-200 bg-white px-[14px] py-3\">\n            <div className=\"flex gap-4\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"pending\"\n                  name=\"status\"\n                  type=\"radio\"\n                  value=\"pending\"\n                  defaultChecked={invoice.status === 'pending'}\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\n                />\n                <label\n                  htmlFor=\"pending\"\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-gray-100 px-3 py-1.5 text-xs font-medium text-gray-600\"\n                >\n                  Pending <ClockIcon className=\"h-4 w-4\" />\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"paid\"\n                  name=\"status\"\n                  type=\"radio\"\n                  value=\"paid\"\n                  defaultChecked={invoice.status === 'paid'}\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\n                />\n                <label\n                  htmlFor=\"paid\"\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-green-500 px-3 py-1.5 text-xs font-medium text-white\"\n                >\n                  Paid <CheckIcon className=\"h-4 w-4\" />\n                </label>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n      <div className=\"mt-6 flex justify-end gap-4\">\n        <Link\n          href=\"/dashboard/invoices\"\n          className=\"flex h-10 items-center rounded-lg bg-gray-100 px-4 text-sm font-medium text-gray-600 transition-colors hover:bg-gray-200\"\n        >\n          Cancel\n        </Link>\n        <Button type=\"submit\">Edit Invoice</Button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;AASA;AACA;AACA;AAXA;;;;;;AAqBA,MAAM,sBAAsB,yIAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,MAAM,QAAQ,EAAE;AAE/D,qBAAO,2UAAC;IAAK,QAAQ;;;;;;AACrB;IACE,qBACE,QAAC;;0BACC,QAAC;gBAAI,WAAU;;kCAEb,QAAC;wBAAI,WAAU;;0CACb,QAAC;gCAAM,SAAQ;gCAAW,WAAU;0CAAiC;;;;;;0CAGrE,QAAC;gCAAI,WAAU;;kDACb,QAAC;wCACC,IAAG;wCACH,MAAK;wCACL,WAAU;wCACV,cAAc,QAAQ,WAAW;;0DAEjC,QAAC;gDAAO,OAAM;gDAAG,QAAQ;0DAAC;;;;;;4CAGzB,UAAU,GAAG,CAAC,CAAC,yBACd,QAAC;oDAAyB,OAAO,SAAS,EAAE;8DACzC,SAAS,IAAI;mDADH,SAAS,EAAE;;;;;;;;;;;kDAK5B,QAAC;wCAAe,WAAU;;;;;;;;;;;;;;;;;;kCAK9B,QAAC;wBAAI,WAAU;;0CACb,QAAC;gCAAM,SAAQ;gCAAS,WAAU;0CAAiC;;;;;;0CAGnE,QAAC;gCAAI,WAAU;0CACb,cAAA,QAAC;oCAAI,WAAU;;sDACb,QAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,MAAK;4CACL,cAAc,QAAQ,MAAM;4CAC5B,aAAY;4CACZ,WAAU;;;;;;sDAEZ,QAAC;4CAAmB,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAMpC,QAAC;;0CACC,QAAC;gCAAO,WAAU;0CAAiC;;;;;;0CAGnD,QAAC;gCAAI,WAAU;0CACb,cAAA,QAAC;oCAAI,WAAU;;sDACb,QAAC;4CAAI,WAAU;;8DACb,QAAC;oDACC,IAAG;oDACH,MAAK;oDACL,MAAK;oDACL,OAAM;oDACN,gBAAgB,QAAQ,MAAM,KAAK;oDACnC,WAAU;;;;;;8DAEZ,QAAC;oDACC,SAAQ;oDACR,WAAU;;wDACX;sEACS,QAAC;4DAAU,WAAU;;;;;;;;;;;;;;;;;;sDAGjC,QAAC;4CAAI,WAAU;;8DACb,QAAC;oDACC,IAAG;oDACH,MAAK;oDACL,MAAK;oDACL,OAAM;oDACN,gBAAgB,QAAQ,MAAM,KAAK;oDACnC,WAAU;;;;;;8DAEZ,QAAC;oDACC,SAAQ;oDACR,WAAU;;wDACX;sEACM,QAAC;4DAAU,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOtC,QAAC;gBAAI,WAAU;;kCACb,QAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;kCAGD,QAAC;wBAAO,MAAK;kCAAS;;;;;;;;;;;;;;;;;;AAI9B","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///Users/Swayam/Desktop/Swayam/dashboardNextJs/node_modules/.pnpm/next%4015.3.1-canary.7_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;AAYrBG,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ;;;;;;;;;;;;;;;;;IAdLN,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,mSAI2C,EAC7CA,qBAAqB","ignoreList":[0],"debugId":null}}]
}